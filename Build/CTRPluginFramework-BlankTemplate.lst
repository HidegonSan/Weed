00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T _Unwind_RaiseException
07000a00 00000024 T ___Unwind_RaiseException
07000a24 00000024 T _Unwind_Resume
07000a24 00000024 T ___Unwind_Resume
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a90 00000024 T _Unwind_Backtrace
07000a90 00000024 T ___Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000018 t __tcf_0
070012d0 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07001334 000000b8 T CTRPluginFramework::main()
070013ec 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070014d0 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
070016b0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
070016b4 00000004 T CTRPluginFramework::OnProcessExit()
070016b8 T svcCustomBackdoor
070016c0 T svcConvertVAToPA
070016c8 T svcFlushDataCacheRange
070016d0 T svcInvalidateEntireInstructionCache
070016d8 T svcMapProcessMemoryEx
070016ec T svcUnmapProcessMemoryEx
070016f4 T svcControlProcess
070016fc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070016fc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07001770 00000048 T CTRPluginFramework::PluginMenu::Run() const
070017b8 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070017c0 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070017d0 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070017dc 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070017dc 0000002c W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07001808 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07001808 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07001820 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
070018e8 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
070018f0 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0700194c 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0700199c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070019d0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001a54 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07001a90 00000028 T OnLoadCro
07001ab8 00000004 W CTRPluginFramework::OnPluginToSwap()
07001abc 00000004 W CTRPluginFramework::OnPluginFromSwap()
07001ac0 000001d8 T CTRPluginFramework::Initialize()
07001c98 000000ac T CTRPluginFramework::ThreadExit()
07001d44 00000054 T abort
07001d98 00000044 T CTRPluginFramework::ThreadInit(void*)
07001ddc 0000009c T __entrypoint
07001e78 0000064c T CTRPluginFramework::KeepThreadMain(void*)
070024c4 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0700250c 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07002538 000000b8 t NCSNDCmd_Add
070025f0 00000084 t NCSNDCmd_Execute.constprop.0
07002674 0000005c T ncsndNotifyAptEvent
070026d0 00000004 t ncsndAptHook
070026d4 000001cc T ncsndInit
070028a0 000000ac T ncsndExit
0700294c 00000024 T ncsndInitializeSound
07002970 00000260 T ncsndPlaySound
07002bd0 00000040 T ncsndStopSound
07002c10 00000090 T ncsndIsPlaying
07002ca0 T LoadCROHooked
07002cb4 T AR__ExecuteRoutine
07002cdc t stackBak
07002ce4 00000020 T __libctru_exit
07002d04 0000001c T __appExit
07002d20 0000003c T __syscall_getreent
07002d5c 0000003c T __getThreadLocalStorage
07002d98 00000070 T __syscall_gettod_r
07002e08 00000004 T __syscall_lock_acquire
07002e0c 00000004 T __syscall_lock_release
07002e10 00000004 T __syscall_lock_init_recursive
07002e14 00000004 T __syscall_lock_acquire_recursive
07002e18 00000004 T __syscall_lock_release_recursive
07002e1c 00000054 T initThreadVars
07002e70 0000005c T __system_initSyscalls
07002ecc 0000018c T __createThread
07003058 00000110 T __startThread
07003168 00000024 T threadGetHandle
0700318c 0000002c T threadFree
070031b8 00000024 T threadJoin
070031dc 00000020 T threadGetCurrent
070031fc 0000003c T threadExit
07003238 00000020 t _thread_begin
07003258 0000004c T hidInitFake
070032a4 0000003c T hidExitFake
070032e0 0000002c T hidSetSharedMem
0700330c 00000070 T plgLdrExit
0700337c 000000d4 T plgLdrInit
07003450 00000050 T PLGLDR__GetPluginPath
070034a0 00000024 T PLGLDR__FetchEvent
070034c4 000000cc T PLGLDR__Reply
07003590 000000b0 T __system_allocateHeaps
07003640 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0700366c 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07003694 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
070037e8 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
07003868 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07003890 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
070038ec 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07003904 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
070039d4 00000004 T __gsp__Update
070039d8 00000294 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
07003c6c 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07003c84 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
07003ca4 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
07003cec 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07003d20 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07003d44 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07003d68 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
07003da4 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
07003dd0 000000a4 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07003e74 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
07003ea8 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
07003f50 000001a8 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
070040f8 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07004134 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07004154 00000244 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07004398 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07004404 00000250 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07004654 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070046c8 00000378 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07004a40 00000218 T CTRPluginFramework::Screenshot::UpdateFileCount()
07004c58 00000048 T CTRPluginFramework::Screenshot::Initialize()
07004ca0 0000006c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07004d0c 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07004d88 000000ac T CTRPluginFramework::SystemImpl::Initialize()
07004e34 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
07004e84 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
07004e9c 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
07004eb8 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07004ef4 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07004f14 00000044 T CTRPluginFramework::SystemImpl::Status()
07004f58 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07004f78 00000060 t CTRPluginFramework::AsmWrapper* std::__relocate_a_1<CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper> >(CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, CTRPluginFramework::AsmWrapper*, std::allocator<CTRPluginFramework::AsmWrapper>&) [clone .isra.0]
07004fd8 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700503c 0000029c t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
070052d8 00000044 W CTRPluginFramework::Lock::~Lock()
070052d8 00000044 W CTRPluginFramework::Lock::~Lock()
0700531c 00000094 T CTRPluginFramework::HookManager::HookManager()
0700531c 00000094 T CTRPluginFramework::HookManager::HookManager()
070053b0 000000d8 T __hook__CheckTlsValue
07005488 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
070054fc 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07005560 000000cc T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0700562c 0000000c T CTRPluginFramework::HookManager::Lock()
07005638 0000000c T CTRPluginFramework::HookManager::Unlock()
07005644 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
070056ac 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07005724 000000c4 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
070057e8 0000008c T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
07005874 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
070059d0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
070059dc 0000003c t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
07005a18 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07005a28 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07005a78 0000003c t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
07005ab4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07005ab4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07005b14 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07005b6c 000000a4 T CTRPluginFramework::Scheduler::Initialize()
07005c10 0000004c T CTRPluginFramework::Scheduler::Exit()
07005c5c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005c5c 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
07005c7c 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07005cbc 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
07005e60 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07005f64 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
070060a4 0000017c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07006220 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07006264 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
070062e4 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07006308 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006308 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006374 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07006474 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
070064c4 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
070065a4 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07006600 00000028 T CTRPluginFramework::ScreenImpl::Release()
07006628 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07006698 00000040 T CTRPluginFramework::ScreenImpl::Flush()
070066d8 00000094 T CTRPluginFramework::ScreenImpl::Clear(bool)
0700676c 00000030 T CTRPluginFramework::ScreenImpl::Copy()
0700679c 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07006868 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07006870 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
070068d0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07006920 0000003c T CTRPluginFramework::ScreenImpl::Clean()
0700695c 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
070069e8 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07006a58 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07006a88 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07006ae8 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07006afc 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07006b18 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07006b34 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07006b3c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07006b44 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07006b4c 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07006b68 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07006b84 0000005c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07006be0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07006c0c 00000054 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07006c60 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07006cbc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07006ce0 00000004 t addrMapNodeDestructor(rbtree_node*)
07006ce4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07006e28 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07006e30 0000006c T CTRPluginFramework::Heap::Free(void*)
07006e9c 0000000c T CTRPluginFramework::Heap::SpaceFree()
07006ea8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07006eb4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07006ed4 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07006ee0 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07006ef8 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07006f38 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07006f7c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07006f8c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07006fa0 00000004 T Kernel::Initialize()
07006fa4 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07006fbc 0000000c T KProcess::GetCurrent()
07006fc8 00000024 T KProcess::PatchCore2Access()
07006fec 0000002c T KProcess::PatchCategory(unsigned long)
07007018 00000014 T KProcess__PatchCategory
0700702c 0000002c T KProcess::PatchMaxPriority(unsigned long)
07007058 00000014 T KProcess__PatchMaxPriority
0700706c 00000028 T KProcess::PatchMaxThreads()
07007094 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
070070e0 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07007174 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
070071b0 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070071e8 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0700724c 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
070072bc 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07007350 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070073f8 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07007430 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0700744c 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07007464 t _store_reg_loop
07007484 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07007490 0000010c W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0700759c 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
070075d8 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07007694 00000428 T CTRPluginFramework::ProcessImpl::Initialize()
07007abc 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07007b28 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07007c08 0000002c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007c34 0000005c t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007c90 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
07007c98 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
07007c9c 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
07007ca0 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
07007ce8 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07007d0c 00000048 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07007d54 0000011c W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
07007e70 000001c8 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
07008038 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700805c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
070080a4 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
070080d0 00000028 W CTRPluginFramework::Mutex::~Mutex()
070080d0 00000028 W CTRPluginFramework::Mutex::~Mutex()
070080f8 00000024 W CTRPluginFramework::File::~File()
070080f8 00000024 W CTRPluginFramework::File::~File()
0700811c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700811c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700814c 0000001c W CTRPluginFramework::TextBox::~TextBox()
07008168 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07008168 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
07008270 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
07008290 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07008418 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07008438 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07008454 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07008470 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
07008480 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
07008488 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07008490 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07008498 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07008498 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070084d4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070084d4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070084f4 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0700862c 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
07008668 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07008668 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070086ac 00000124 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
070087d0 0000074c T CTRPluginFramework::PluginMenuImpl::Run()
07008f1c 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07008f74 0000009c W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07009010 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07009114 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07009114 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700917c 00000190 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700930c 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700942c 0000019c T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070095c8 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
07009610 000000b4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070096c4 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07009700 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07009834 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07009974 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07009980 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07009994 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07009994 00000150 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07009ae4 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07009ae4 000001b8 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07009c9c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07009d20 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07009d20 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07009dfc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07009dfc 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07009f14 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07009f50 00000058 T CTRPluginFramework::Menu::CloseAll()
07009fa8 00000030 T CTRPluginFramework::Menu::~Menu()
07009fa8 00000030 T CTRPluginFramework::Menu::~Menu()
07009fd8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07009fe4 00000008 T CTRPluginFramework::Menu::GetFolder() const
07009fec 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07009ff4 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0700a038 000003a4 T CTRPluginFramework::Menu::Draw() const
0700a3e0 000000a0 T CTRPluginFramework::Menu::_ScrollUp(int)
0700a480 000000a0 T CTRPluginFramework::Menu::_ScrollDown(int)
0700a520 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0700a768 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0700a8d4 00000068 T CTRPluginFramework::Menu::ShowNote()
0700a93c 00000008 T CTRPluginFramework::Menu::CloseNote()
0700a944 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0700a94c 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0700a98c 00000044 T CTRPluginFramework::Menu::Pop()
0700a9d0 00000104 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0700aad4 000000a8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0700ab7c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
0700ab84 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0700ab84 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0700abb4 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
0700abd0 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700abd0 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700aca4 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0700acc0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700acc0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ad94 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0700ada4 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0700adf4 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
0700ae0c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
0700ae30 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
0700aed8 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0700aee8 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0700af08 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0700af60 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0700af70 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0700af80 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0700af90 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700afe8 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700b0a8 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700b194 00000064 t __tcf_0
0700b1f8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700b27c 000004b8 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700b27c 000004b8 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700b734 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700ba5c 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700bb90 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700c028 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700c144 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700c1d4 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0700c20c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0700c238 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700c30c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0700c390 000000a4 T CTRPluginFramework::PluginMenuHome::Init()
0700c434 0000009c T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0700c4d0 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0700c52c 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0700c5ec 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700c640 00000158 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0700c798 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0700cb44 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0700cd68 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0700cd7c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0700cd90 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0700cda4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0700cda8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0700cdac 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0700cdd4 00000064 t __tcf_0
0700ce38 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0700cebc 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0700cf20 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700cfc8 00000058 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0700d020 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700d08c 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0700d194 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0700d314 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700d4a4 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700d504 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700d5c4 000000fc W std::__cxx11::to_string(int)
0700d6c0 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700d71c 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700d840 00000048 t CTRPluginFramework::Reboot()
0700d888 00000054 t CTRPluginFramework::Shutdown()
0700d8dc 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0700d900 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0700d914 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0700d928 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0700d93c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0700d950 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0700d964 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0700d978 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0700d98c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0700d9a0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0700d9b4 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0700db04 00000af4 T CTRPluginFramework::PluginMenuTools::InitMenu()
0700e5f8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700e5f8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700e788 0000010c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0700e894 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0700e8d4 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700e8d4 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
0700e96c 00000120 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700ea8c 00000208 t CTRPluginFramework::UpdateScreenshotText()
0700ec94 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0700edc4 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700ef28 00000454 t CTRPluginFramework::ScreenshotMenuCallback()
0700f37c 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700f41c 0000059c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0700f9b8 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700f9d8 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700fa20 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0700fa5c 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700fa6c 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700fad8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0700fad8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
0700fb14 0000001c T CTRPluginFramework::SubMenu::operator()()
0700fb30 000001f8 T CTRPluginFramework::SubMenu::Draw()
0700fd28 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
0700fe08 00000008 T CTRPluginFramework::SubMenu::IsOpen()
0700fe10 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0700fe2c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0700fe64 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700fe64 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0700fee8 000001a4 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701008c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701008c 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07010090 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07010090 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07010094 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07010094 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07010098 00000014 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070100ac 00000014 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070100c0 00000014 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070100d4 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
0701027c 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07010370 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
070104ac 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07010530 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07010790 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070107cc 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701082c 00000258 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07010a84 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07010c64 00000274 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07010ed8 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07010ed8 000000e4 T CTRPluginFramework::HexEditor::~HexEditor()
07010fbc 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07010fd8 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07011090 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
070110ac 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07011120 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
0701114c 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07011188 00000010 T CTRPluginFramework::HexEditor::Refresh()
07011198 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
070111dc 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07011214 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07011240 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
070112c0 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07011358 000000dc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07011434 000000cc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07011500 000000bc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
070115bc 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07011770 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07011780 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07011790 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
070117a0 000002ec T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070117a0 000002ec T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07011a8c 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07011acc 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07011c94 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
07011cd4 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07011d40 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07011e14 00000104 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07011f18 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
07011f70 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07012054 00000110 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07012164 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
070122e8 00000068 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07012350 00000178 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
070124c8 000001c8 T CTRPluginFramework::HexEditor::_Update()
07012690 00000294 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07012924 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07012938 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07012938 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07012960 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701297c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070129dc 0000022c T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07012c08 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07012c08 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07012cf4 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07012cfc 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07012d10 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07012d1c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07012d24 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07012d48 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07012d78 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07012d94 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07012dfc 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07012e1c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07012e1c 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07012e3c 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07012e58 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07012eb0 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07012eb0 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07012f44 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012f44 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012fa4 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07012fa4 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013004 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07013008 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07013074 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070130f8 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07013158 000000c4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701321c 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07013250 000002c8 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07013518 000001c8 T CTRPluginFramework::GuideReader::GuideReader()
07013518 000001c8 T CTRPluginFramework::GuideReader::GuideReader()
070136e0 000003ec T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07013acc 0000015c T CTRPluginFramework::GuideReader::Draw()
07013c28 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07013c9c 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .constprop.0]
07013cd4 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
07013d14 00000048 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07013d5c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07013d90 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07013e14 00000054 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07013e68 00000050 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07013eb8 00000050 t void std::__new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07013f08 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013f08 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070140d8 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070140d8 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070142b4 00000070 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
070142b4 00000070 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07014324 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701432c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07014334 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701433c 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07014344 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701434c 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07014354 00000058 T CTRPluginFramework::KeyboardImpl::Clear()
070143ac 000001c8 T CTRPluginFramework::KeyboardImpl::_RenderTop()
07014574 000004dc T CTRPluginFramework::KeyboardImpl::_RenderBottom()
07014a50 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07014c14 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
07014c7c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07014d0c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07014d8c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07014e10 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07014f6c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
070150d8 000005dc T CTRPluginFramework::KeyboardImpl::_CheckKeys()
070156b4 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07015714 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07015788 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07015830 0000054c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07015d7c 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
07015dec 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07015df4 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07015e68 00000108 W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07015f70 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07015f9c 00000104 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
070160a0 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
070160cc 000002e0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070163ac 00000068 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07016414 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07016440 00000108 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
07016548 000000fc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
07016644 000000c8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701670c 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07016c88 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07017204 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
070172c4 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07017b80 000000c0 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
07017c40 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07018694 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070186d4 000000fc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
070187d0 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07018978 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
070189c0 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07018a14 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07018a60 000005ac T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701900c 0000035c T CTRPluginFramework::KeyboardImpl::Run()
07019368 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07019368 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07019390 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070193d4 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07019400 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07019414 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07019438 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070194bc 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
070195d8 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07019634 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07019694 000000c0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
07019754 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07019754 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070199a8 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070199fc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07019a20 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07019a48 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07019b2c 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07019c4c 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07019e18 00000028 W CTRPluginFramework::ARCode::~ARCode()
07019e18 00000028 W CTRPluginFramework::ARCode::~ARCode()
07019e40 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07019e74 00000014 t __tcf_0
07019e88 00000180 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0701a008 00000180 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0701a188 00000118 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0701a2a0 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
0701a2dc 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0701a428 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0701a458 000000c4 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0701a51c 00000264 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0701a780 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
0701a84c 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
0701aa08 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701aba8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0701ac2c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701ac8c 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0701acec 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0701ae04 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0701ae5c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0701ae6c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0701afd8 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0701afd8 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0701b448 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0701b4f4 000004c8 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0701b9bc 00000124 t CTRPluginFramework::ClearSearchFolder()
0701bae0 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0701bb14 000002a0 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0701bdb4 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0701bddc 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0701be4c 00000108 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0701bf54 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0701bf90 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0701c1f4 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0701c2d8 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0701c318 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0701c348 000002f4 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0701c63c 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701c9e8 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0701ca4c 00000050 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0701ca9c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701ca9c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701cad8 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0701cc10 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0701cd8c 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0701cde4 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0701cf78 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0701cf90 000001b4 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0701d144 00000104 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0701d248 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0701d408 00000104 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0701d50c 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0701d594 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0701d7b8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701d7e4 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0701d820 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701d85c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701d898 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701d8d4 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0701d910 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701d93c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0701d978 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701d9b4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0701d9f0 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701da2c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0701da58 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701da94 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0701dac0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701daec 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0701db18 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701db54 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0701db80 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0701dbbc 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701dbe8 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0701dc1c 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701dc58 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0701dc84 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0701dcc0 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0701dcec 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701dd18 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0701dd44 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0701dd70 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0701dd9c 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701ddc8 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0701ddf4 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0701de20 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0701de5c 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0701de88 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0701dea4 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0701ded8 00000024 t fontGetSystemFont
0701defc 00000010 T CTRPluginFramework::Glyph::Width() const
0701df0c 000004d4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0701e3e0 00000350 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0701e730 000000c0 T CTRPluginFramework::Font::Initialize()
0701e7f0 00000198 W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0701e988 000000c0 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0701ea48 00000128 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0701eb70 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0701ebfc 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0701ec1c 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0701ec64 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0701ece8 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0701ee54 00000018 t __tcf_0
0701ee6c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0701f010 0000011c T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0701f12c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0701f1c0 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701f264 0000031c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701f580 0000004c W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0701f5cc 000001c8 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0701f794 000000fc W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0701f890 0000003c W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0701f8d0 00000690 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0701ff60 000001a4 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07020104 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07020188 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07020308 00000190 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07020498 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07020538 000001e0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07020718 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07020748 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020748 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020804 00000028 T CTRPluginFramework::Window::~Window()
07020804 00000028 T CTRPluginFramework::Window::~Window()
0702082c 00000064 T CTRPluginFramework::Window::Draw() const
07020890 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702096c 00000018 T CTRPluginFramework::Window::DrawButton() const
07020984 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0702099c 00000018 T CTRPluginFramework::Window::MustClose() const
070209b4 00000028 T CTRPluginFramework::Window::Close() const
070209dc 00000004 T CTRPluginFramework::Window::GetRect() const
070209e0 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07020a14 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07020a94 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07020ab4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07020ab4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07020ac8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07020ac8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07020ae8 00000024 T CTRPluginFramework::UIContainer::Draw()
07020b0c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07020b40 00000104 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07020c44 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07020c78 00000008 W CTRPluginFramework::Drawable::operator()()
07020c80 000000f8 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07020d78 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020d78 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020e04 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020e04 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020ebc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020ebc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020f48 00000040 T CTRPluginFramework::TouchKey::Clear()
07020f88 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020f88 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020fa8 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07020fc4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07020fcc 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
07020fd4 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07021044 00000070 T CTRPluginFramework::TouchKey::Draw()
070210b4 000000e0 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021194 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0702119c 00000104 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070212a0 000001a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070212a0 000001a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07021440 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07021460 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07021480 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
070214ac 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
070214e0 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07021508 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07021530 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07021550 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07021580 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
070215c8 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0702160c 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07021750 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
0702177c 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0702177c 00000040 t __tls_init
070217bc 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07021808 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070218a4 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07021938 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
070219e8 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07021aa4 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07021b5c 00000094 T CTRPluginFramework::ComboBox::Draw()
07021bf0 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07021c5c 000000ac T CTRPluginFramework::ComboBox::operator()()
07021d08 0000007c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07021d84 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07021d84 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07021dd0 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07021dec 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07021dec 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07021e38 0000003c T CTRPluginFramework::ComboBox::Clear()
07021e74 000000e0 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07021f54 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07021fa4 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07022028 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
0702207c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07022088 0000001c T CTRPluginFramework::OSDImpl::TryLock()
070220a4 0000000c T CTRPluginFramework::OSDImpl::Unlock()
070220b0 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07022198 0000019c T CTRPluginFramework::OSDImpl::WaitFramePaused()
07022334 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
070223e0 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07022410 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07022494 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
070224ac 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07022530 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07022554 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07022578 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07022578 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070225b0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070225b8 00000008 T CTRPluginFramework::BMPImage::Width() const
070225c0 00000008 T CTRPluginFramework::BMPImage::Height() const
070225c8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070225d0 00000010 T CTRPluginFramework::BMPImage::data() const
070225e0 0000001c T CTRPluginFramework::BMPImage::end() const
070225fc 00000014 W CTRPluginFramework::BMPImage::DataClear()
07022610 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07022610 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702269c 00000034 T CTRPluginFramework::BMPImage::Unload()
070226d0 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070228a4 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
070228ec 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0702291c 00000128 T CTRPluginFramework::BMPImage::OptimiseForRendering()
07022a44 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
07022b0c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07022b14 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07022c04 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07022cd4 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07022d40 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07022d64 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07022e80 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07022e80 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07022ed4 00000300 T CTRPluginFramework::BMPImage::_LoadBitmap()
070231d4 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070231d4 000000a8 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702327c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070232c8 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07023590 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07023654 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070237a0 00000020 T CTRPluginFramework::Button::~Button()
070237a0 00000020 T CTRPluginFramework::Button::~Button()
070237c0 0000001c T CTRPluginFramework::Button::~Button()
070237dc 0000015c T CTRPluginFramework::Button::Draw()
07023938 00000070 T CTRPluginFramework::Button::operator()()
070239a8 000001a8 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07023b50 0000017c T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07023b50 0000017c T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07023ccc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07023ccc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07023cec 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07023cec 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07023d84 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07023d84 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07023d98 00000018 T CTRPluginFramework::Button::Enable(bool)
07023db0 00000010 T CTRPluginFramework::Button::Enable()
07023dc0 00000010 T CTRPluginFramework::Button::Disable()
07023dd0 00000010 T CTRPluginFramework::Button::Lock()
07023de0 00000010 T CTRPluginFramework::Button::Execute()
07023df0 00000018 T CTRPluginFramework::Button::SetState(bool)
07023e08 00000010 T CTRPluginFramework::Button::GetState() const
07023e18 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07023e20 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07023eb4 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07023f18 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07023fc4 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07023ff4 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07024160 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
070241b8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070241b8 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702423c 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0702431c 000000d0 T CTRPluginFramework::InstallOSD()
070243ec 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07024498 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
070244a0 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07024590 000001a4 T CTRPluginFramework::OSDImpl::Update()
07024734 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
0702478c 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07024854 000005ec T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
07024e40 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07024ecc 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07024f60 00000080 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07024fe0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07024fe4 000002fc T CTRPluginFramework::TextBox::Draw()
070252e0 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0702530c 00000094 T CTRPluginFramework::TextBox::TextBox()
0702530c 00000094 T CTRPluginFramework::TextBox::TextBox()
070253a0 0000000c T CTRPluginFramework::TextBox::Open() const
070253ac 0000000c T CTRPluginFramework::TextBox::Close() const
070253b8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
070253c0 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
070255e8 0000000c T CTRPluginFramework::TextBox::DrawConst() const
070255f4 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07025688 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0702573c 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07025794 0000009c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07025830 00000234 T CTRPluginFramework::TextBox::_GetTextInfos()
07025a64 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07025a64 00000188 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07025bec 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07025cd4 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07025e00 00000120 T CTRPluginFramework::Renderer::GetTextSize(char const*)
07025f20 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
070260c4 000001cc T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07026290 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
070262f4 0000023c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07026530 000005a4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
07026ad4 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07026f58 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07026fcc 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0702703c 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0702703c 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070270b0 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070270b0 000000a4 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07027154 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702715c 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07027190 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0702725c 000000fc T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07027358 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07027370 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07027384 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0702739c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070273e4 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070273ec 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
070273ec 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
0702740c 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027428 0000007c T CTRPluginFramework::NumericTextBox::Draw()
070274a4 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702754c 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07027584 00000064 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070275e8 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
070276e0 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070276f0 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07027700 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07027708 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07027714 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07027714 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702777c 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070277f0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07027874 00000334 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07027ba8 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07027c20 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07027c90 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07027cc8 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07027d48 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
07028190 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
070283b0 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
07028454 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07028514 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
070285d4 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07028684 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07028714 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702888c 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
070289a0 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07028a48 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07028aac 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07028b40 00000140 T ARM_Disasm::Decode01(unsigned long)
07028c80 00000028 T ARM_Disasm::Decode10(unsigned long)
07028ca8 00000078 T ARM_Disasm::Decode11(unsigned long)
07028d20 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07028d74 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07028dc4 00000118 T ARM_Disasm::DecodeALU(unsigned long)
07028edc 000000c4 T ARM_Disasm::Decode00(unsigned long)
07028fa0 00000030 T ARM_Disasm::Decode(unsigned long)
07028fd0 00000114 W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
070290e4 0000003c W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
07029120 00000340 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07029460 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702975c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070297e0 00000110 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070298f0 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07029c34 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07029cc4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07029cc4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07029de8 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07029e24 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029f14 00000084 T CTRPluginFramework::ARCode::Update()
07029f98 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07029f98 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07029fbc 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07029fe4 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07029fe4 0000010c T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702a0f0 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702a0f0 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702a124 0000003c T CTRPluginFramework::ARCodeContext::Update()
0702a160 000000a8 T CTRPluginFramework::ARCodeContext::Clear()
0702a208 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702a2c8 00000018 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0702a2e0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .constprop.0] [clone .isra.0]
0702a2f8 00000018 t __tcf_0
0702a310 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702a3b8 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702a4a8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702a52c 0000005c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0702a588 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702a68c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702a69c 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702a6b4 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702a704 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a754 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a79c 000004e8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702ac84 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702ac84 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702acc8 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702ace8 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0702ad28 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702ae50 0000012c W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702af7c 000006e4 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702b660 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702b660 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702b6c8 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702b6e4 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702b734 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702b7dc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702b7dc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702b828 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
0702b944 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702b9d4 00000154 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702bb28 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0702bb68 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702bbec 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0702bc48 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0702bc7c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702bd24 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702bd90 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0702bde0 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702be40 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702be40 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702beb8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702beb8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702beb8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702beb8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702bf04 00001418 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0702d31c 0000019c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702d31c 0000019c T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702d4b8 000002bc T CTRPluginFramework::ARCodeEditor::_RenderTop()
0702d774 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0702d800 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702d800 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702d820 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0702d834 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702d878 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702d8ac 00000124 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702d9d0 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702da0c 00000068 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0702da74 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702da98 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702dac0 00000028 t __tcf_0
0702dae8 000002fc T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0702dde4 00000698 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0702e47c 000000f8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0702e574 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702e630 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702eaa4 000003c4 T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702ee68 00000124 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0702ef8c 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0702efdc 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702f048 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0702f0cc 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0702f0f8 00000100 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0702f1f8 000001f0 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0702f3e8 000001f4 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0702f5dc 000000bc T CTRPluginFramework::Preferences::LoadSettings()
0702f698 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0702f750 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0702f808 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0702f864 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
0702f900 0000015c T CTRPluginFramework::Preferences::WriteSettings()
0702fa5c 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0702fabc 00000004 T CTRPluginFramework::Preferences::Initialize()
0702fac0 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702fbb0 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702fbdc 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0702fbdc 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
0702fc08 00000018 T CTRPluginFramework::LineReader::~LineReader()
0702fc08 00000018 T CTRPluginFramework::LineReader::~LineReader()
0702fc20 00000100 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702fd20 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0702fd54 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702fdc0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702fe44 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702fea0 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0702fefc 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0702ff40 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0702ffc0 000000c0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030080 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070301c0 0000009c T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0703025c 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07030294 0000005c T CTRPluginFramework::InitializeRandomEngine()
070302f0 0000025c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0703054c 0000075c t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07030ca8 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030cb0 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07030cf4 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07030dbc 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07030e10 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07030e90 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07030eac 0000000c t __tcf_0
07030eb8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030eb8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030ee0 00000078 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030f58 00000048 T CTRPluginFramework::LineWriter::Flush()
07030fa0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030fa0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030fbc 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031020 00000018 T CTRPluginFramework::LineWriter::Close()
07031038 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070310a4 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07031128 0000001c T CTRPluginFramework::ResetColor[abi:cxx11]()
07031144 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07031168 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703118c 00000080 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .constprop.0]
0703120c 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070312b4 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070312c0 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703132c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703138c 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070313d0 00000048 T CTRPluginFramework::Directory::Close() const
07031418 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07031418 00000090 T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070314a8 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070314bc 00000008 T CTRPluginFramework::Directory::IsOpen() const
070314c4 00000040 T CTRPluginFramework::Directory::Directory()
070314c4 00000040 T CTRPluginFramework::Directory::Directory()
07031504 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07031538 00000074 T CTRPluginFramework::Directory::~Directory()
07031538 00000074 T CTRPluginFramework::Directory::~Directory()
070315ac 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070315ac 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070315cc 00000094 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031660 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031700 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070317a0 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031874 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031908 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07031a54 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07031a54 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07031aac 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031ae8 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07031ae8 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07031b04 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07031c20 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07031ca4 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07031d0c 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07031dc0 00000110 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
07031ed0 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07031f14 000001e8 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070320fc 000001a4 T CTRPluginFramework::Directory::_List() const
070322a0 000000d8 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07032378 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07032454 0000000c T CTRPluginFramework::FwkSettings::Get()
07032460 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
0703252c 00000010 T CTRPluginFramework::Process::GetHandle()
0703253c 00000010 T CTRPluginFramework::Process::GetTitleID()
0703254c 00000064 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070325b0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070325e8 00000024 T CTRPluginFramework::Process::GetTextSize()
0703260c 00000008 T CTRPluginFramework::Process::Pause()
07032614 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07032624 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070326cc 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070326d0 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0703271c 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0703273c 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0703275c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0703277c 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
070327a0 0000000c T CTRPluginFramework::HookContext::GetCurrent()
070327ac 00000028 T CTRPluginFramework::HookContext::GetCallCode()
070327d4 00000048 T CTRPluginFramework::Hook::Hook()
070327d4 00000048 T CTRPluginFramework::Hook::Hook()
0703281c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0703281c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07032844 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07032844 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07032858 00000060 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
070328b8 0000004c T CTRPluginFramework::Hook::~Hook()
070328b8 0000004c T CTRPluginFramework::Hook::~Hook()
07032904 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07032920 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07032948 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07032958 0000001c T CTRPluginFramework::Hook::IsEnabled()
07032974 00000120 T CTRPluginFramework::Hook::Enable()
07032a94 00000030 T CTRPluginFramework::Hook::Disable()
07032ac4 00000008 T CTRPluginFramework::Hook::GetContext() const
07032acc 00000010 T CTRPluginFramework::System::IsNew3DS()
07032adc 00000010 T CTRPluginFramework::System::Reboot()
07032aec 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07032b58 00000080 T CTRPluginFramework::File::Close() const
07032bd8 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07032c94 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07032d88 00000058 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07032de0 000000d4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07032eb4 00000008 T CTRPluginFramework::File::Tell() const
07032ebc 0000002c T CTRPluginFramework::File::Rewind() const
07032ee8 00000030 T CTRPluginFramework::File::Flush() const
07032f18 00000064 T CTRPluginFramework::File::GetSize() const
07032f7c 00000008 T CTRPluginFramework::File::IsOpen() const
07032f84 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07032f98 00000044 T CTRPluginFramework::File::File()
07032f98 00000044 T CTRPluginFramework::File::File()
07032fdc 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033070 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033144 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070331c8 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033268 00000114 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703337c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0703337c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070333d8 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07033418 00000028 T CTRPluginFramework::Touch::IsDown()
07033440 00000028 T CTRPluginFramework::Touch::GetPosition()
07033468 00000020 T CTRPluginFramework::Time::AsSeconds() const
07033488 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070334b0 00000018 T CTRPluginFramework::Clock::Clock()
070334b0 00000018 T CTRPluginFramework::Clock::Clock()
070334c8 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
070334f4 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0703352c 00000034 T CTRPluginFramework::Clock::Restart()
07033560 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07033560 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
07033564 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
07033568 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
07033598 00000014 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070335ac 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
070335b0 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
070335e4 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070335e4 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07033690 00000048 T CTRPluginFramework::Task::Start() const
070336d8 0000004c T CTRPluginFramework::Task::Start(void*) const
07033724 00000064 T CTRPluginFramework::Task::Wait() const
07033788 0000002c t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
070337b4 00000290 T __ctrpf_getThreadVars
07033a44 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07033a44 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07033a78 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07033a78 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07033a98 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07033aec 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07033b34 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07033b3c 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07033b74 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07033bac 0000003c T CTRPluginFramework::Controller::Update()
07033be8 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07033bec 0000000c T CTRPluginFramework::Sound::Sound()
07033bec 0000000c T CTRPluginFramework::Sound::Sound()
07033bf8 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07033bf8 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07033c0c 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07033c0c 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07033c40 000000bc T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07033cfc 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07033d6c 00000054 T CTRPluginFramework::Sound::~Sound()
07033d6c 00000054 T CTRPluginFramework::Sound::~Sound()
07033dc0 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07033dd8 00000040 T CTRPluginFramework::Sound::Play(int, int)
07033e18 00000008 T CTRPluginFramework::Sound::Play(int)
07033e20 00000008 T CTRPluginFramework::Sound::Play()
07033e28 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07033e28 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07033e50 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07033e50 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07033e80 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07033e88 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033e88 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033ed0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033ed0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033f0c 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07033f0c 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07033f48 00000008 T CTRPluginFramework::MessageBox::operator()() const
07033f50 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07033ff8 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070340b8 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07034160 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070341f0 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07034280 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07034310 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034310 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034358 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07034358 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070343c4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070343c4 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
070343f0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070343f8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07034414 00000044 T CTRPluginFramework::Keyboard::Open() const
07034458 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
0703451c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07034620 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
070346e4 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
070347e8 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070348ac 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070349b0 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07034a48 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07034b18 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07034b8c 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07034c14 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07034c1c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07034c24 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07034c2c 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07034c98 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07034d1c 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07034d7c 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07034d84 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
07034e04 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07034e80 000000f4 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07034f74 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07034f74 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07034fb4 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07034fe4 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070350a8 0000001c T CTRPluginFramework::HotkeyManager::Count()
070350c4 00000130 T CTRPluginFramework::HotkeyManager::AskForKeys()
070351f4 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
0703533c 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07035370 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07035370 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
07035380 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07035380 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703539c 00000104 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
070354a0 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07035528 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07035598 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070355fc 00000060 W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&)
0703565c 000000f4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07035750 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07035788 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07035804 00000110 T CTRPluginFramework::Color::Fade(float)
07035914 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07035954 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070359d0 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07035bf0 000003ac t cwav_initialize
07035f9c 000000f4 t cwav_stopImpl.part.0
07036090 00000004 T cwavUseEnvironment
07036094 00000034 T cwavSetVAToPACallback
070360c8 00000050 T cwavLoad
07036118 0000049c T cwavPlay
070365b4 00000064 T cwavStop
07036618 00000170 T cwavFree
07036788 00000004 T cwav_defaultVAToPA
0703678c 00000004 T cwavEnvUseEnvironment
07036790 00000008 T cwavEnvGetEnvironment
07036798 00000004 T cwavEnvInitialize
0703679c 00000004 T cwavEnvFinalize
070367a0 00000014 T cwavEnvCompatibleEncoding
070367b4 00000008 T cwavEnvGetChannelAmount
070367bc 00000018 T cwavEnvIsChannelAvailable
070367d4 000000f8 T cwavEnvPlay
070368cc 00000004 T cwavEnvChannelIsPlaying
070368d0 00000004 T cwavEnvStop
070368d4 T __aeabi_read_tp
070368e0 0000003c T fontEnsureMappedExtension
0703691c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07036948 00000034 W MemPool::DelBlock(MemBlock*)
0703697c 0000005c T MemPool::CoalesceRight(MemBlock*)
070369d8 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
07036ad8 00000100 T MemPool::Deallocate(MemChunk const&)
07036bd8 00000020 T MemPool::GetFreeSpace()
07036bf8 000001a4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07036d9c 00000030 W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short>(unsigned short const*, unsigned short const*, unsigned short*)
07036dcc 000001a4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07036f70 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07036f70 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07037034 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07037064 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07037098 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07037098 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07037138 0000004c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
07037184 00000038 T CTRPluginFramework::EventManager::Clear()
070371bc 000001c4 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07037380 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
070373e8 00000304 T CTRPluginFramework::EventManager::ProcessEvents()
070376f0 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
070377bc 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
070377c4 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070377c4 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07037888 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07037890 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
070378a8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
070378a8 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
070378d0 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
070379a0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
07037a60 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07037ae4 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037b44 0000005c W CTRPluginFramework::Search::~Search()
07037b44 0000005c W CTRPluginFramework::Search::~Search()
07037ba0 00000044 T CTRPluginFramework::Search32::~Search32()
07037ba0 00000044 T CTRPluginFramework::Search32::~Search32()
07037be4 0000001c T CTRPluginFramework::Search32::~Search32()
07037c00 0000001c W CTRPluginFramework::Search::~Search()
07037c1c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07037c1c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07037e20 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037e20 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037e40 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07037e40 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07037ed4 00000124 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07037ff8 000001ac T CTRPluginFramework::Search32::SecondSearchSpecified()
070381a4 00000108 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
070382ac 00000194 T CTRPluginFramework::Search32::SecondSearchUnknown()
07038440 00000148 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07038588 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070385d4 0000013c T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07038710 0000013c T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0703884c 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07038888 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
070388f0 000000e8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070389d8 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07038a14 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07038a94 00000104 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07038b98 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07038be4 0000031c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07038f00 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07039160 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070393d8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07039638 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0703966c 000002ec T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07039958 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703999c 00000048 T CTRPluginFramework::Search::Cancel()
070399e4 00000190 T CTRPluginFramework::Search::CheckNextRegion()
07039b74 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07039bf8 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07039c58 00000008 T CTRPluginFramework::Search::GetHeader() const
07039c60 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07039ca8 0000000c T CTRPluginFramework::Search::GetType() const
07039cb4 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07039ccc 00000070 T CTRPluginFramework::Search::WriteHeader()
07039d3c 00000314 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07039d3c 00000314 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703a050 00000058 T CTRPluginFramework::Search::WriteResults()
0703a0a8 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703a0f0 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0703a31c 00000108 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0703a424 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0703a4a8 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703a4a8 000001ac T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703a654 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0703a790 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0703a7e0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0703a864 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703a894 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703a894 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703a8e0 00000384 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703ac64 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703ad14 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703ae50 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703ae78 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703aedc 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703afcc 000002a8 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703b274 00000378 T CTRPluginFramework::GatewayRAMDumper::operator()()
0703b5ec 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703b658 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0703b6dc 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703b73c 000000f0 W std::__cxx11::to_string(unsigned long)
0703b82c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0703b8a8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0703b95c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0703bae8 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0703bb40 00000148 T CTRPluginFramework::SearchMenu::_Export()
0703bc88 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
0703bde0 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703bde0 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0703be9c 00000598 T CTRPluginFramework::SearchMenu::Draw()
0703c434 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0703c550 00000230 T CTRPluginFramework::SearchMenu::Update()
0703c780 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703cc90 00000030 t CTRPluginFramework::GetIndex(int)
0703ccc0 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703cd2c 00000098 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0703cdc4 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0703cef8 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0703cf6c 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0703d138 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703d138 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703d1a4 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0703d1d0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703d1d0 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703d200 00000108 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0703d308 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703d344 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d344 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d4a0 000000e4 T CTRPluginFramework::Converter::Converter()
0703d4a0 000000e4 T CTRPluginFramework::Converter::Converter()
0703d584 00000010 T CTRPluginFramework::Converter::Instance()
0703d594 00000108 T CTRPluginFramework::Converter::_Draw()
0703d69c 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0703d8c4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703d8c4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703d8c8 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703d8dc 00000014 T CTRPluginFramework::FloatingButton::operator()()
0703d8f0 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703d904 000001ac T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0703dab0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703dab0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703daf0 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703db5c 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703db5c 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703dcd4 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703dcd4 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703de2c 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0703def0 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0703e1b0 00000204 T CTRPluginFramework::MessageBoxImpl::operator()()
0703e3b4 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0703e3d8 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0703e3fc 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0703e420 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0703e448 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0703e470 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0703e498 000000f8 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0703e590 0000199c T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0703ff2c 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0703ffdc 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0703fffc 00000450 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704044c 00000454 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070408a0 0000044c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07040cec 00000618 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041304 000008b0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07041bb4 000008a8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704245c 00000868 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07042cc4 00000c38 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070438fc 00000848 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044144 000008a8 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070449ec 00000894 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045280 00000dac T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704602c 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046c90 00000718 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070473a8 000003fc T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070477a4 000006b8 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047e5c 0000000c T __sync_init
07047e68 00000018 T __sync_fini
07047e80 0000002c T syncArbitrateAddressWithTimeout
07047eac 0000001c T LightLock_Init
07047ec8 000000b0 T LightLock_Lock
07047f78 00000040 T LightLock_Unlock
07047fb8 00000024 T RecursiveLock_Init
07047fdc 00000030 T RecursiveLock_Lock
0704800c 00000078 T RecursiveLock_TryLock
07048084 00000054 T RecursiveLock_Unlock
070480d8 00000040 T LightEvent_Init
07048118 000000a4 T LightEvent_Clear
070481bc 00000048 T LightEvent_Pulse
07048204 000000c8 T LightEvent_Signal
070482cc 000000b0 T LightEvent_Wait
0704837c 00000014 T LightSemaphore_Init
07048390 00000094 T LightSemaphore_Acquire
07048424 00000064 T LightSemaphore_Release
07048488 00000084 W envGetHandle
0704850c 00000050 W envDestroyHandles
0704855c 00000074 T osConvertVirtToPhys
070485d0 00000054 T osGetTimeRef
07048624 000000ec T osGetTime
07048710 00000094 T fontEnsureMapped
070487a4 00000100 T fontGlyphIndexFromCodePoint
070488a4 00000070 T fontGetCharWidthInfo
07048914 00000130 T srvInit
07048a44 00000058 T srvExit
07048a9c 000000a0 T srvGetServiceHandleDirect
07048b3c 00000038 T srvGetServiceHandle
07048b74 00000038 T srvPublishToSubscriber
07048bac 000000b4 t mappableFindAddressWithin
07048c60 00000028 T mappableInit
07048c88 00000080 T mappableAlloc
07048d08 00000004 T mappableFree
07048d0c 000000a4 T cfguInit
07048db0 0000003c T cfguExit
07048dec 00000054 T CFGU_GetSystemLanguage
07048e40 000000f0 T gspExit
07048f30 0000008c T acInit
07048fbc 0000003c T acExit
07048ff8 000000a4 T amInit
0704909c 0000003c T amExit
070490d8 000000b8 T sslcInit
07049190 00000048 T sslcExit
070491d8 00000048 T sslcGenerateRandomData
07049220 00000158 T aptSendCommand
07049378 00000030 T aptHook
070493a8 00000030 T aptUnhook
070493d8 00000028 T APT_PrepareToCloseApplication
07049400 00000048 T APT_CloseApplication
07049448 0000007c T APT_CheckNew3DS
070494c4 00000048 T APT_GetSharedFont
0704950c 00000024 W hidShouldUseIrrst
07049530 0000018c T hidInit
070496bc 000000e8 T hidExit
070497a4 000002a4 T hidScanInput
07049a48 00000010 T hidKeysHeld
07049a58 00000010 T hidKeysDown
07049a68 00000010 T hidKeysUp
07049a78 00000018 T hidTouchRead
07049a90 0000000c T srvPmGetSessionHandle
07049a9c 000000cc T fsInit
07049b68 0000003c T fsExit
07049ba4 000000cc T FSUSER_OpenFile
07049c70 000000bc T FSUSER_DeleteFile
07049d2c 000000f8 T FSUSER_RenameFile
07049e24 000000bc T FSUSER_DeleteDirectoryRecursively
07049ee0 000000d4 T FSUSER_CreateFile
07049fb4 000000c4 T FSUSER_CreateDirectory
0704a078 000000f8 T FSUSER_RenameDirectory
0704a170 000000b4 T FSUSER_OpenDirectory
0704a224 00000098 T FSUSER_OpenArchive
0704a2bc 00000058 T FSFILE_Read
0704a314 00000060 T FSFILE_Write
0704a374 0000003c T FSFILE_GetSize
0704a3b0 00000028 T FSFILE_SetSize
0704a3d8 0000003c T FSFILE_Close
0704a414 00000024 T FSFILE_Flush
0704a438 00000028 T FSFILE_SetPriority
0704a460 00000050 T FSDIR_Read
0704a4b0 0000003c T FSDIR_Close
0704a4ec 00000010 T rbtree_init
0704a4fc 000001b4 t do_insert
0704a6b0 00000008 T rbtree_insert
0704a6b8 00000090 T rbtree_rotate
0704a748 00000318 T rbtree_remove
0704aa60 00000074 T rbtree_find
0704aad4 00000054 T encode_utf16
0704ab28 000000e0 T encode_utf8
0704ac08 00000064 T decode_utf16
0704ac6c 0000013c T decode_utf8
0704ada8 000000c0 T utf8_to_utf16
0704ae68 T svcQueryMemory
0704ae98 T svcExitProcess
0704aea0 T svcCreateThread
0704aec0 T svcExitThread
0704aec8 T svcSleepThread
0704aed0 T svcSetThreadPriority
0704aed8 T svcReleaseMutex
0704aee0 T svcCreateEvent
0704aef4 T svcSignalEvent
0704aefc T svcClearEvent
0704af04 T svcMapMemoryBlock
0704af0c T svcUnmapMemoryBlock
0704af14 T svcCreateAddressArbiter
0704af28 T svcArbitrateAddress
0704af40 T svcArbitrateAddressNoTimeout
0704af48 T svcCloseHandle
0704af50 T svcWaitSynchronization
0704af58 T svcWaitSynchronizationN
0704af80 T svcDuplicateHandle
0704af94 T svcGetSystemTick
0704af9c T svcGetSystemInfo
0704afb4 T svcGetProcessInfo
0704afcc T svcConnectToPort
0704afe0 T svcSendSyncRequest
0704afe8 T svcOpenProcess
0704affc T svcGetProcessId
0704b010 T svcGetThreadId
0704b024 T svcBreak
0704b02c T svcInvalidateProcessDataCache
0704b034 T svcFlushProcessDataCache
0704b03c T svcKernelSetState
0704b044 T svcQueryProcessMemory
0704b068 00000164 T irrstInit
0704b1cc 000000cc T irrstExit
0704b298 000000b4 T irrstScanInput
0704b34c 00000024 T irrstKeysHeld
0704b370 0000005c T rbtree_node_next
0704b3cc 00000004 T operator delete(void*)
0704b3d0 00000004 T operator delete(void*, std::nothrow_t const&)
0704b3d4 00000004 T operator delete[](void*)
0704b3d8 00000060 T __cxa_guard_acquire
0704b438 0000000c T __cxa_guard_release
0704b444 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704b444 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704b464 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704b490 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704b490 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704b4a0 00000014 T std::get_new_handler()
0704b4b4 0000005c T operator new(unsigned int)
0704b510 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704b52c 00000004 T operator new[](unsigned int)
0704b530 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704b530 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704b550 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704b57c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704b5e8 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704b6c4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704b708 00000004 T std::type_info::~type_info()
0704b708 00000004 T std::type_info::~type_info()
0704b70c 00000008 T std::type_info::__is_pointer_p() const
0704b70c 00000008 T std::type_info::__is_function_p() const
0704b714 0000004c T std::type_info::__equal(std::type_info const&) const
0704b714 0000004c T std::type_info::operator==(std::type_info const&) const
0704b760 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704b774 00000014 T std::__detail::_List_node_base::_M_unhook()
0704b788 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704b7f8 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704ba7c 0000002c T std::__throw_bad_alloc()
0704baa8 0000002c T std::__throw_bad_array_new_length()
0704bad4 00000040 T std::__throw_logic_error(char const*)
0704bb14 00000040 T std::__throw_invalid_argument(char const*)
0704bb54 00000040 T std::__throw_length_error(char const*)
0704bb94 00000040 T std::__throw_out_of_range(char const*)
0704bbd4 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704bbe4 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704bcc8 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704bda8 0000000c T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704bdb4 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0704be08 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0704be1c 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0704bea0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0704bec8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
0704beec 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
0704bf10 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704bfc4 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0704c0c4 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704c140 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0704c1dc 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve()
0704c2a8 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0704c318 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0704c38c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0704c3d0 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0704c3e8 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0704c50c 000002ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
0704c7b8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704c800 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0704c864 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0704c8f4 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0704c920 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0704c968 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0704c99c 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0704ca40 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0704ca50 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0704cac4 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0704caf4 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
0704cb40 0000008c W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0704cbcc 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0704cc2c 0000000c T std::bad_alloc::what() const
0704cc38 00000020 T std::bad_alloc::~bad_alloc()
0704cc38 00000020 T std::bad_alloc::~bad_alloc()
0704cc58 0000002c T std::bad_alloc::~bad_alloc()
0704cc84 0000000c T std::bad_array_new_length::what() const
0704cc90 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704cc90 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704ccb0 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704ccdc 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704cd38 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704cd4c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704cd4c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704cd6c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704cd98 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704ce00 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ce2c 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704ce70 00000004 T operator delete(void*, unsigned int)
0704ce74 000000c8 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704cf3c 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704cfd4 00000044 T __cxa_allocate_exception
0704d018 00000030 T __cxa_free_exception
0704d048 0000003c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704d084 T __cxa_end_cleanup
0704d094 0000012c T __cxa_type_match
0704d1c0 000000b4 T __cxa_begin_cleanup
0704d274 000000b4 T __gnu_end_cleanup
0704d328 000000cc T __cxa_begin_catch
0704d3f4 000000e0 T __cxa_end_catch
0704d4d4 00000004 T std::exception::~exception()
0704d4d4 00000004 T std::exception::~exception()
0704d4d8 00000004 T std::bad_exception::~bad_exception()
0704d4d8 00000004 T std::bad_exception::~bad_exception()
0704d4dc 0000000c T transaction clone for std::exception::what() const
0704d4dc 0000000c T std::exception::what() const
0704d4e8 0000000c T transaction clone for std::bad_exception::what() const
0704d4e8 0000000c T std::bad_exception::what() const
0704d4f4 00000018 T std::bad_exception::~bad_exception()
0704d50c 0000000c T __cxa_get_globals_fast
0704d518 0000000c T __cxa_get_globals
0704d524 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0704d690 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0704d6e8 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0704d7c0 000006c8 T __gxx_personality_v0
0704de88 00000014 T __cxxabiv1::__terminate(void (*)())
0704de9c 00000018 T std::terminate()
0704deb4 0000000c T __cxxabiv1::__unexpected(void (*)())
0704dec0 00000018 T std::unexpected()
0704ded8 00000014 T std::get_terminate()
0704deec 00000014 T std::get_unexpected()
0704df00 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0704df60 00000058 T __cxa_init_primary_exception
0704dfb8 00000054 T __cxa_throw
0704e00c 000000b0 T __cxa_rethrow
0704e0bc 00000008 T std::logic_error::what() const
0704e0bc 00000008 T std::runtime_error::what() const
0704e0c4 00000064 T std::logic_error::~logic_error()
0704e0c4 00000064 T std::logic_error::~logic_error()
0704e128 00000064 T std::length_error::~length_error()
0704e128 00000064 T std::length_error::~length_error()
0704e18c 00000064 T std::out_of_range::~out_of_range()
0704e18c 00000064 T std::out_of_range::~out_of_range()
0704e1f0 00000064 T std::invalid_argument::~invalid_argument()
0704e1f0 00000064 T std::invalid_argument::~invalid_argument()
0704e254 0000006c T std::logic_error::~logic_error()
0704e2c0 0000006c T std::out_of_range::~out_of_range()
0704e32c 0000006c T std::invalid_argument::~invalid_argument()
0704e398 0000006c T std::length_error::~length_error()
0704e404 000000d4 T std::logic_error::logic_error(char const*)
0704e404 000000d4 T std::logic_error::logic_error(char const*)
0704e4d8 00000020 T std::invalid_argument::invalid_argument(char const*)
0704e4d8 00000020 T std::invalid_argument::invalid_argument(char const*)
0704e4f8 00000020 T std::length_error::length_error(char const*)
0704e4f8 00000020 T std::length_error::length_error(char const*)
0704e518 00000020 T std::out_of_range::out_of_range(char const*)
0704e518 00000020 T std::out_of_range::out_of_range(char const*)
0704e538 0000008c W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0704e5c4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0704e5c8 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0704e638 0000002c T __cxa_call_terminate
0704e664 00000138 T __cxa_call_unexpected
0704e7a0 0000027c T log2
0704ea1c 00000024 t with_errno
0704ea40 00000050 T __math_divzero
0704ea90 0000001c T __math_invalid
0704eab0 0000013c T ceil
0704ebec 000000b8 T ceilf
0704eca8 00000144 T floor
0704edec 00000068 T roundf
0704ee54 00000044 T __popcountsi2
0704ee98 00000030 T __aeabi_f2lz
0704ee98 00000030 T __fixsfdi
0704eec8 00000040 T __aeabi_f2ulz
0704eec8 00000040 T __fixunssfdi
0704ef08 00000120 T __udivmoddi4
0704f028 00000018 t selfrel_offset31
0704f040 00000090 t search_EIT_table
0704f0d0 00000040 t __gnu_unwind_get_pr_addr
0704f110 000000f4 t get_eit_entry
0704f204 00000088 t restore_non_core_regs
0704f28c 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0704f2a0 00000004 t _Unwind_DebugHook
0704f2a4 00000064 t unwind_phase2
0704f308 00000140 t unwind_phase2_forced
0704f448 000000a4 T __gnu_Unwind_RaiseException
0704f4ec 00000028 T __gnu_Unwind_ForcedUnwind
0704f514 00000074 T __gnu_Unwind_Resume
0704f588 00000020 T __gnu_Unwind_Resume_or_Rethrow
0704f5a8 00000004 T _Unwind_Complete
0704f5ac 00000018 T _Unwind_DeleteException
0704f5c4 0000005c T _Unwind_VRS_Get
0704f620 0000002c t _Unwind_GetGR
0704f64c 0000005c T _Unwind_VRS_Set
0704f6a8 0000002c t _Unwind_SetGR
0704f6d4 000000c0 T __gnu_Unwind_Backtrace
0704f794 00000414 t __gnu_unwind_pr_common
0704fba8 00000008 T __aeabi_unwind_cpp_pr0
0704fbb0 00000008 W __aeabi_unwind_cpp_pr1
0704fbb8 00000008 W __aeabi_unwind_cpp_pr2
0704fbc0 000003dc T _Unwind_VRS_Pop
0704ff9c 00000064 t next_unwind_byte
07050000 0000002c t _Unwind_GetGR.constprop.0
0705002c 00000004 t unwind_UCB_from_context
07050030 00000418 T __gnu_unwind_execute
07050448 00000048 T __gnu_unwind_frame
07050490 00000010 T _Unwind_GetRegionStart
070504a0 0000001c T _Unwind_GetLanguageSpecificData
070504bc 00000008 T _Unwind_GetDataRelBase
070504c4 00000008 T _Unwind_GetTextRelBase
070504cc 00000014 T atexit
070504e0 00000020 T calloc
07050500 000000c0 T _calloc_r
070505c0 00000010 T ctime
070505d0 0000000c T __errno
070505dc 0000015c T _fclose_r
07050738 00000234 T __sflush_r
0705096c 00000094 T _fflush_r
07050a00 0000000c T _cleanup_r
07050a0c 00000184 T __sinit
07050b90 0000000c T __sfp_lock_acquire
07050b9c 0000000c T __sfp_lock_release
07050ba8 000000f8 T _malloc_trim_r
07050ca0 000002e8 T _free_r
07050f88 00000070 T _fwalk_reent
07050ff8 00000084 T __libc_init_array
0705107c 00000018 T isspace
07051094 00000018 T isxdigit
070510ac 00000020 T localtime
070510cc 0000035c T localtime_r
07051428 00000138 T __smakebuf_r
07051560 00000020 T memalign
07051580 0000014c T _memalign_r
070516cc 00000018 T malloc
070516e4 00000018 T free
070516fc 000007e4 T _malloc_r
07051ee0 000000e4 T memchr
07051fc4 000000b0 T memcmp
07052074 00000118 T memcpy
0705218c 00000150 T memmove
070522dc 000000f4 T memset
070523d0 0000000c T __malloc_lock
070523dc 0000000c T __malloc_unlock
070523e8 00000020 T realloc
07052408 000004a0 T _realloc_r
070528a8 000000cc T snprintf
07052974 00000064 T sprintf
070529d8 00000044 T __sread
07052a1c 00000008 T __seofread
07052a24 00000068 T __swrite
07052a8c 00000044 T __sseek
07052ad0 00000008 T __sclose
07052ad8 0000012c t iso_year_adjust
07052c04 000010b4 t __strftime.isra.0
07053cb8 00000004 T strftime
07053cbc 0000005c T strlen
07053d18 000000e4 T strncmp
07053dfc 000000c4 T strncpy
07053ec0 00000048 T strnlen
07053f08 00000064 t sulp
07053f70 000013a8 T _strtod_l
07055318 000000f0 T strtof
07055408 00000244 t _strtoull_l.constprop.0
0705564c 00000004 T _strtoull_r
07055650 000001c4 t _strtoul_l.constprop.0
07055814 00000004 T _strtoul_r
07055818 00000028 T strtoul
07055840 0000066c t get_arg
07055eb0 00003334 T _svfprintf_r
070591e4 0000003c T time
07059220 00000254 T __tzcalc_limits
07059474 0000000c T __tz_lock
07059480 0000000c T __tz_unlock
0705948c 00000010 T _tzset_unlocked
0705949c 00000478 T _tzset_unlocked_r
07059914 000000a4 T _vsnprintf_r
070599b8 00000038 T vsnprintf
070599f0 00000054 T _wcrtomb_r
07059a44 00000028 T _wcsrtombs_r
07059a6c 0000000c T abs
07059a78 00000020 T asctime
07059a98 00000080 T asctime_r
07059b18 000000b0 T __register_exitproc
07059bc8 000001b0 t quorem
07059d78 000011f8 T _dtoa_r
0705af70 000000f0 t rshift
0705b060 00000814 T __gethex
0705b874 0000004c T __match
0705b8c0 0000029c T __hexnan
0705bb5c 000000c8 T _findenv_r
0705bc24 00000018 T _getenv_r
0705bc3c 0000000c T __gettzinfo
0705bc48 00000268 T gmtime_r
0705beb0 0000000c T labs
0705bebc 0000000c T _localeconv_r
0705bec8 00000010 T __locale_mb_cur_max
0705bed8 000002f8 T __utf8_mbtowc
0705c1d0 00000088 T _Balloc
0705c258 0000001c T _Bfree
0705c274 000000f4 T __multadd
0705c368 00000110 T __s2b
0705c478 00000060 T __hi0bits
0705c4d8 0000009c T __lo0bits
0705c574 000000a8 T __i2b
0705c61c 00000204 T __multiply
0705c820 00000124 T __pow5mult
0705c944 00000140 T __lshift
0705ca84 00000058 T __mcmp
0705cadc 000001ec T __mdiff
0705ccc8 00000068 T __ulp
0705cd30 000000d0 T __b2d
0705ce00 00000120 T __d2b
0705cf20 00000078 T __ratio
0705cf98 00000088 T __copybits
0705d020 0000005c T __any_on
0705d07c 0000000c T nanf
0705d088 00000088 T frexp
0705d110 00000064 T siprintf
0705d174 00000074 T siscanf
0705d1e8 00000010 T nan
0705d1f8 000000cc T sniprintf
0705d2c4 000000f0 T strcpy
0705d3b4 000001a4 t _strtol_l.part.0
0705d558 0000003c T _strtol_r
0705d594 0000066c t get_arg
0705dc00 00000188 T __ssprint_r
0705dd88 00002210 T _svfiprintf_r
0705ff98 00000050 t get_arg
0705ffe8 000000d4 T _sungetc_r
070600bc 0000006c T __ssrefill_r
07060128 000000c4 T _sfread_r
070601ec 00002310 T __ssvfiscanf_r
070624fc 000000a8 T __submore
070625a4 00000188 T _wcsnrtombs_l
0706272c 0000004c T _wcsnrtombs_r
07062778 000000f0 T __utf8_wctomb
07062868 0000005c T __assert_func
070628c4 0000000c T __env_lock
070628d0 0000000c T __env_unlock
070628dc 0000003c T fiprintf
07062918 00000008 T iswspace
07062920 00000068 T _mbrtowc_r
07062988 000000f4 T __sccl
07062a7c 0000022c t _strtoll_l.constprop.0
07062ca8 00000004 T _strtoll_r
07062cac 0000066c t get_arg
07063318 00000030 T __sprint_r
07063348 000022ec T _vfiprintf_r
07065634 000000d0 t __sbprintf
07065704 0000013c T __swsetup_r
07065840 000004b4 T __sfvwrite_r
07065cf4 0000003c T iswspace_l
07065d30 000001d8 t __jp2uc
07065f08 0000009c T _jp2uc_l
07065fa4 0000008c T category
07066030 00000008 t null_write
07066038 00000078 T _fstat_r
070660b0 00000030 T _gettimeofday_r
070660e0 00000008 T _isatty_r
070660e8 00000084 T _lseek_r
0706616c 00000080 T _read_r
070661ec 00000078 T _sbrk_r
07066264 00000080 T _write_r
070662e4 00000008 T __flockfile
070662ec 00000008 T __funlockfile
070662f4 0000003c T __get_handle
07066330 000000f4 T _close_r
07066424 0000002c T __getreent
07066450 0000001c T __libc_lock_acquire
0706646c 0000001c T __libc_lock_release
07066488 0000001c T __libc_lock_init_recursive
070664a4 0000001c T __libc_lock_acquire_recursive
070664c0 0000001c T __libc_lock_release_recursive
070664dc 0000001c T __libc_lock_close_recursive
070664f8 00000038 T __aeabi_d2lz
070664f8 00000038 T __fixdfdi
07066530 00000040 T __aeabi_d2ulz
07066530 00000040 T __fixunsdfdi
07066570 T _fini
07066a14 00000014 r CTRPluginFramework::defaultSoundFiles
07066a3c 00000014 V vtable for CTRPluginFramework::MenuItem
07066a50 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07066aa1 00000023 r CTRPluginFramework::g_copyrightText
07066ac4 00000013 r CTRPluginFramework::g_ctrpfText
0706712b 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
070671f4 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
07067444 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07067464 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07067484 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
070674e0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
070674e8 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07067504 0000001c R vtable for CTRPluginFramework::MenuEntryTools
070676a0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070676a8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
070678e8 00000a00 r font
070682e8 0000001c R vtable for CTRPluginFramework::TouchKey
07068304 0000001c R vtable for CTRPluginFramework::ComboBox
070684cc 0000001c R vtable for CTRPluginFramework::Button
070684e8 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07068514 00000058 r CTRPluginFramework::g_OSDPattern
0706856c 0000001c R vtable for CTRPluginFramework::TextBox
07068588 0000001c R vtable for CTRPluginFramework::NumericTextBox
07068a20 00000040 r RegNames
07068a60 00000010 r shift_names
07068a70 00000040 r cond_names
07068b0c 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706938c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07069394 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706939c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
070693a4 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
070693b8 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070693c4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
070695ec 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07069608 00000008 R CTRPluginFramework::Time::Zero
07069610 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>
0706962c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
070696bc 00000004 R CTRPluginFramework::Color::SkyBlue
070696c0 00000004 R CTRPluginFramework::Color::Orange
070696c4 00000004 R CTRPluginFramework::Color::LimeGreen
070696c8 00000004 R CTRPluginFramework::Color::ForestGreen
070696cc 00000004 R CTRPluginFramework::Color::Gainsboro
070696d0 00000004 R CTRPluginFramework::Color::DimGrey
070696d4 00000004 R CTRPluginFramework::Color::DeepSkyBlue
070696d8 00000004 R CTRPluginFramework::Color::DarkGrey
070696dc 00000004 R CTRPluginFramework::Color::Brown
070696e0 00000004 R CTRPluginFramework::Color::BlackGrey
070696e4 00000004 R CTRPluginFramework::Color::Green
070696e8 00000004 R CTRPluginFramework::Color::Gray
070696ec 00000004 R CTRPluginFramework::Color::Silver
070696f0 00000004 R CTRPluginFramework::Color::Magenta
070696f4 00000004 R CTRPluginFramework::Color::Cyan
070696f8 00000004 R CTRPluginFramework::Color::Yellow
070696fc 00000004 R CTRPluginFramework::Color::Blue
07069700 00000004 R CTRPluginFramework::Color::Red
07069704 00000004 R CTRPluginFramework::Color::White
07069708 00000004 R CTRPluginFramework::Color::Black
0706970c 00000384 r Settings15_array
07069a90 00000384 r UnCheckedCheckbox_array
07069e14 00000384 r Unsplash15_array
0706a198 000009c4 r Plus25_array
0706ab5c 000009c4 r GameControllerFilled25_array
0706b520 00000384 r About15_array
0706b8a4 000009c4 r Cut25_array
0706c268 00000640 r CloseWindow20_array
0706c8a8 00000384 r Controller15_array
0706cc2c 00000384 r ClearSymbolFilled15_array
0706cfb0 000009c4 r ClipboardFilled25_array
0706d974 00000384 r EnterKeyFilled15_array
0706dcf8 000009c4 r CutFilled25_array
0706e6bc 00000e10 r DefaultKeyboardCustomIcon_array
0706f4cc 00000384 r Search15_array
0706f850 00000384 r CapsLockOn15_array
0706fbd4 000009c4 r TrashFilled25_array
07070598 00000384 r RAM15_array
0707091c 00000384 r More15_array
07070ca0 000009c4 r InfoFilled25_array
07071664 00000640 r CloseWindowFilled20_array
07071ca4 00000384 r HandCursor15_array
07072028 000009c4 r AddFavoriteFilled25_array
070729ec 00000384 r EnterKey15_array
07072d70 000009c4 r Duplicate25_array
07073734 00000384 r File15_array
07073ab8 000009c4 r AddFavorite25_array
0707447c 000009c4 r Edit25_array
07074e40 000009c4 r DuplicateFilled25_array
07075804 000009c4 r Save25_array
070761c8 000009c4 r Clipboard25_array
07076b8c 000009c4 r Info25_array
07077550 000009c4 r EditFilled25_array
07077f14 000009c4 r KeyboardFilled25_array
070788d8 000009c4 r PlusFilled25_array
0707929c 00000384 r ClearSymbol15_array
07079620 00000384 r Shutdown15_array
070799a4 00000384 r Maintenance15_array
07079d28 00000384 r CheckedCheckbox_array
0707a0ac 00000384 r Grid15_array
0707a430 000009c4 r Keyboard25_array
0707adf4 00000384 r CapsLockOnFilled15_array
0707b178 00000384 r UserManualFilled15_array
0707b4fc 000009c4 r Trash25_array
0707bec0 00000384 r GameController15_array
0707c244 00000384 r Star15_array
0707c5c8 000009c4 r GameController25_array
0707cf8c 00001900 r Rocket40_array
0707e88c 00000384 r FolderFilled_array
0707ec10 00000384 r Restart15_array
0707efd8 00000038 R vtable for CTRPluginFramework::Search32
0707f078 00000038 R vtable for CTRPluginFramework::Search
0707f294 00000038 r CTRPluginFramework::stable
0707f2cc 00000038 r CTRPluginFramework::ktable
0707f334 0000001c R vtable for CTRPluginFramework::FloatingButton
0707f3ec 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0707f410 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0707f41c 00000014 R vtable for __gnu_cxx::recursive_init_error
0707f430 00000001 R std::nothrow
0707f434 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0707f45c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0707f468 0000002c R vtable for __cxxabiv1::__si_class_type_info
0707f494 0000000d R typeinfo name for std::type_info
0707f4a4 00000008 R typeinfo for std::type_info
0707f4ac 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0707f4bc 00000404 R std::__detail::__prime_list
0707f8c0 00000018 V typeinfo name for std::_Sp_make_shared_tag
0707f8d8 00000008 V typeinfo for std::_Sp_make_shared_tag
0707f9d8 0000000d R typeinfo name for std::bad_alloc
0707f9e8 0000000c R typeinfo for std::bad_alloc
0707f9f4 00000014 R vtable for std::bad_alloc
0707fa24 00000019 R typeinfo name for std::bad_array_new_length
0707fa40 0000000c R typeinfo for std::bad_array_new_length
0707fa4c 00000014 R vtable for std::bad_array_new_length
0707fa60 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0707fa84 0000000c R typeinfo for __cxxabiv1::__class_type_info
0707fa90 0000002c R vtable for __cxxabiv1::__class_type_info
0707fae0 0000000d R typeinfo name for std::exception
0707faf0 00000008 R typeinfo for std::exception
0707faf8 00000012 R typeinfo name for std::bad_exception
0707fb0c 0000000c R typeinfo for std::bad_exception
0707fb18 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0707fb38 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0707fb40 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0707fb64 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0707fb6c 00000014 R vtable for std::bad_exception
0707fb80 00000010 R typeinfo name for std::logic_error
0707fb90 0000000c R typeinfo for std::logic_error
0707fb9c 00000015 R typeinfo name for std::invalid_argument
0707fbb4 0000000c R typeinfo for std::invalid_argument
0707fbc0 00000011 R typeinfo name for std::length_error
0707fbd4 0000000c R typeinfo for std::length_error
0707fbe0 00000011 R typeinfo name for std::out_of_range
0707fbf4 0000000c R typeinfo for std::out_of_range
0707fc00 00000014 R vtable for std::logic_error
0707fc14 00000014 R vtable for std::invalid_argument
0707fc28 00000014 R vtable for std::length_error
0707fc3c 00000014 R vtable for std::out_of_range
0707fc98 00000890 R __log2_data
07080528 00000004 R _global_impure_ptr
0708052c 00000060 R __month_lengths
0708061c 00000014 r fpinan.0
07080630 00000014 r fpi.1
07080648 00000028 r tinytens
070806ac 00000010 r zeroes.0
070806bc 00000010 r blanks.1
07080824 000000fc R _C_time_locale
07080994 00000024 r mon_name.0
070809b8 00000015 r day_name.1
070809d0 00000101 R _ctype_
07080b94 00000100 R __hexdig
07080d24 0000000c r p05.0
07080d30 00000028 R __mprec_bigtens
07080d58 000000c8 R __mprec_tens
07080e20 00000010 r zeroes.0
07080e30 00000010 r blanks.1
07080e40 0000006c R __action_table
07080eac 0000006c R __state_table
07080f18 00000100 R __chclass
07081018 00000022 r basefix.0
0708107c 00000010 r zeroes.0
0708108c 00000010 r blanks.1
070810b0 00001a7c r d02f4
07082b2c 0000172a r b02cf
07084258 00000040 r a8
07084298 000000a2 r a7
0708433c 00000070 r a6
070843ac 0000005b r a3
07084408 000000bc r a2
070844c4 000000bc r a1
07084580 00003528 r categories
07087ab0 00000070 R dotab_stdnull
07087b20 R __tdata_align
07087c48 R __exidx_start
07087ee8 R __exidx_end
07087ee8 00000004 D cwavCurrentVAPAConvCallback
07087eec 00000001 D CTRPluginFramework::g_keepRunning
07087eed 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07087ef0 00000004 D CTRPluginFramework::Screenshot::Screens
07087ef4 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07087ef8 00000001 D CTRPluginFramework::SystemImpl::Language
07087ef9 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
07087efc 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07087f00 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07087f04 00000004 D CTRPluginFramework::RendererPriv::g_customColor
07087f08 000001f4 D opcode_names
070880fc 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07088100 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07088104 00000004 D CTRPluginFramework::FwkSettings::Header
07088108 00000004 D g_charPerSheet
0708810c 00000004 D Settings15
07088110 00000004 D UnCheckedCheckbox
07088114 00000004 D Unsplash15
07088118 00000004 D Plus25
0708811c 00000004 D GameControllerFilled25
07088120 00000004 D About15
07088124 00000004 D Cut25
07088128 00000004 D CloseWindow20
0708812c 00000004 D Controller15
07088130 00000004 D ClearSymbolFilled15
07088134 00000004 D ClipboardFilled25
07088138 00000004 D EnterKeyFilled15
0708813c 00000004 D CutFilled25
07088140 00000004 D DefaultKeyboardCustomIcon
07088144 00000004 D Search15
07088148 00000004 D CapsLockOn15
0708814c 00000004 D TrashFilled25
07088150 00000004 D RAM15
07088154 00000004 D More15
07088158 00000004 D InfoFilled25
0708815c 00000004 D CloseWindowFilled20
07088160 00000004 D HandCursor15
07088164 00000004 D AddFavoriteFilled25
07088168 00000004 D EnterKey15
0708816c 00000004 D Duplicate25
07088170 00000004 D File15
07088174 00000004 D AddFavorite25
07088178 00000004 D Edit25
0708817c 00000004 D DuplicateFilled25
07088180 00000004 D Save25
07088184 00000004 D Clipboard25
07088188 00000004 D Info25
0708818c 00000004 D EditFilled25
07088190 00000004 D KeyboardFilled25
07088194 00000004 D PlusFilled25
07088198 00000004 D ClearSymbol15
0708819c 00000004 D Shutdown15
070881a0 00000004 D Maintenance15
070881a4 00000004 D CheckedCheckbox
070881a8 00000004 D Grid15
070881ac 00000004 D Keyboard25
070881b0 00000004 D CapsLockOnFilled15
070881b4 00000004 D UserManualFilled15
070881b8 00000004 D Trash25
070881bc 00000004 D GameController15
070881c0 00000004 D Star15
070881c4 00000004 D GameController25
070881c8 00000004 D Rocket40
070881cc 00000004 D FolderFilled
070881d0 00000004 D Restart15
070881d4 00000001 D CTRPluginFramework::EventManager::_refresh
070881d8 00000004 d kCount
070881dc 00000004 d kInterval
070881e0 00000004 d kDelay
070881e4 00000004 D __cxxabiv1::__unexpected_handler
070881e8 00000004 D __cxxabiv1::__terminate_handler
070881ec 00000004 D _impure_ptr
070881f0 00000460 d impure_data
07088650 00000004 D __malloc_sbrk_base
07088654 00000004 D __malloc_trim_threshold
07088658 00000408 D __malloc_av_
07088a60 00000008 D _tzname
07088a68 00000058 d tzinfo
07088ac0 0000016c D __global_locale
07088c2c 00000004 D environ
07088c30 0000008c D devoptab_list
07088cbc 00001000 d handles
07089cbc 0000000c d __stderr_handle
07089cc8 0000000c d __stdout_handle
07089cd4 0000000c d __stdin_handle
07089cf4 d _GLOBAL_OFFSET_TABLE_
07089d00 D __tdata_lma
07089d0c d __frame_dummy_init_array_entry
07089d0c D __init_array_start
07089d0c B __preinit_array_end
07089d0c B __preinit_array_start
07089d0c D __tdata_lma_end
07089d74 d __do_global_dtors_aux_fini_array_entry
07089d74 D __init_array_end
07089dcc 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089dcc D __bss_start__
07089dd8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07089ddc 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07089de0 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089de4 00000004 b ncsndMutex
07089de8 00000004 b ncsndCmdCurOff
07089dec 00000004 b ncsndCmdStartOff
07089df0 00000004 B ncsndSharedMem
07089df4 00000004 B ncsndCSNDHandle
07089df8 00000004 B ncsndChannels
07089dfc 00000004 b ncsndRefCount
07089e00 00000010 B ncsndOffsets
07089e10 00000004 B ncsndSharedMemSize
07089e14 00000004 b ncsndSharedMemBlock
07089e18 00000001 b ncsndCookieHooked
07089e1c 0000000c b ncsndCookie
07089e28 b saved_stack
07089e30 00000004 b cwavListCount
07089e34 00000004 b cwavList
07089e38 00000004 b cwavAddedToList
07089e3c b completed.1
07089e40 b object.0
07089e58 00000004 b CTRPluginFramework::g_runningInstance
07089e5c 00000004 b g_onLoadCroLock
07089e60 00000004 b g_onSharedMemMapHook
07089e64 00000004 b g_onLoadCroHook
07089e68 00000008 b CTRPluginFramework::g_mainThread
07089e70 00000004 B CTRPluginFramework::g_keepEvent
07089e74 00000004 B CTRPluginFramework::g_keepThreadHandle
07089e78 00000004 B CTRPluginFramework::g_continueGameEvent
07089e80 00000008 B CTRPluginFramework::_sdmcArchive
07089e88 00001000 b CTRPluginFramework::keepThreadStack
0708ae88 00000004 b g_mainThreadVars
0708ae8c 00000001 b properInit
0708ae8d 00000001 b fakeInit
0708ae90 00000004 b plgLdrRefCount
0708ae94 00000004 b plgReply
0708ae98 00000004 b plgEvent
0708ae9c 00000004 b plgLdrArbiter
0708aea0 00000004 b plgLdrHandle
0708aea4 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708aea8 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708aeac 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708aeb4 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708aebc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708aec0 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708aec8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708aed0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708aed8 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708aedc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708aee0 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708aee4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708aee8 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708aeec 00000004 b CTRPluginFramework::isReady
0708aef0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708aef8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708af00 00000008 B CTRPluginFramework::Screenshot::_task
0708af08 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708af10 00000008 B CTRPluginFramework::Screenshot::_timer
0708af18 00000004 B CTRPluginFramework::Screenshot::_display
0708af1c 00000004 B CTRPluginFramework::Screenshot::_filecount
0708af20 00000004 B CTRPluginFramework::Screenshot::_mode
0708af24 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708af28 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708af2c 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708af44 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708af60 00000008 B CTRPluginFramework::Screenshot::Timer
0708af68 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708af6c 00000008 b CTRPluginFramework::g_sleepEvent
0708af74 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708af78 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708af7c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708af80 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708af81 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708af82 00000001 B _g_isCitra
0708af84 0000001c B CTRPluginFramework::HookManager::_singleton
0708afa0 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708b048 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708b04c 00000004 B CTRPluginFramework::ScreenImpl::Top
0708b050 000000ac b CTRPluginFramework::_botBuf
0708b0fc 000000ac b CTRPluginFramework::_topBuf
0708b1a8 00000008 b CTRPluginFramework::Heap::g_heapPool
0708b1b0 0000000c b CTRPluginFramework::Heap::_mutex
0708b1bc 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708b1c0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708b1c4 0000000c b sAddrMap
0708b1d0 00000044 b CTRPluginFramework::g_previousException
0708b214 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708b218 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708b220 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708b22c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708b238 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708b248 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708b24c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708b2b0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708b2b4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708b2b8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708b2c0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708b2c4 00000004 B CTRPluginFramework::ProcessImpl::Status
0708b2c8 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708b2cc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708b2d0 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708b2d4 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708b2e0 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708b2e4 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708b2f0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708b2f4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708b2f8 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708b2fc 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708b300 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0708b308 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708b30c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b310 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b318 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708b320 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708b328 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b32c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708b334 00000008 b CTRPluginFramework::g_textXpos
0708b33c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708b340 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708b348 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708b34c 00000004 b CTRPluginFramework::g_screenshotEntry
0708b350 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708b354 00000004 b CTRPluginFramework::g_OpenFileLock
0708b358 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708b360 00000040 b CTRPluginFramework::g_hookExportFile
0708b3a0 00000004 b CTRPluginFramework::g_HookMode
0708b3a4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708b3a8 00000004 b CTRPluginFramework::g_mode
0708b3ac 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708b3b0 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708b3c0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b3c4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b3d4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708b3d8 00000004 B CTRPluginFramework::__g_hexEditor
0708b3dc 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708b3e0 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708b3f0 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708b3f4 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708b3f8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b400 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b408 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b40c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b41c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b420 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b428 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b42c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b43c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b440 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b450 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b454 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b464 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b468 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b478 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b47c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b48c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708b498 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708b4a4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708b4b0 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b4b4 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b4bc 00000004 b CTRPluginFramework::__pmARinstance
0708b4c0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708b4c4 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708b4d4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708b4d8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708b4e8 00000004 b CTRPluginFramework::g_radioId
0708b4ec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708b4f0 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708b500 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708b51c 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708b520 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708b524 0000000c B CTRPluginFramework::Font::_mutex
0708b530 00000004 B CTRPluginFramework::g_glyphAllocated
0708b534 00000004 B CTRPluginFramework::g_fontAllocated
0708b538 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b53c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b548 00000028 B CTRPluginFramework::Window::TopWindow
0708b570 00000028 B CTRPluginFramework::Window::BottomWindow
0708b598 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708b5a0 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708b5a1 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708b5a4 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708b5b0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b5b4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b5b8 00000050 b CTRPluginFramework::g_fpsCounter
0708b608 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708b610 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708b618 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708b620 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708b628 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708b630 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708b631 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708b632 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708b634 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708b654 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708b660 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708b66c 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708b678 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708b69c 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708b6a8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708b6c0 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708b6d8 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708b6dc 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708b6e0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708b6e4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708b6e8 0000000c B CTRPluginFramework::g_codeTypes
0708b6f4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b6f8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b704 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b708 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b714 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708b715 00000001 b CTRPluginFramework::g_newCondDataToggle
0708b716 00000001 b CTRPluginFramework::g_condAgainstData
0708b718 00000004 b CTRPluginFramework::__arCodeEditor
0708b71c 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708b71d 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708b720 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708b738 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708b750 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708b768 000000a8 B CTRPluginFramework::Preferences::Settings
0708b810 00000008 B CTRPluginFramework::Preferences::Backlights
0708b818 00000008 B CTRPluginFramework::Preferences::Flags
0708b820 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708b824 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708b828 000009c4 b CTRPluginFramework::g_rng
0708c1ec 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708c1f0 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708c208 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708c20c 00000004 B CTRPluginFramework::Process::OnPauseResume
0708c210 00000004 B CTRPluginFramework::Process::exceptionCallback
0708c214 00000004 B CTRPluginFramework::System::OnAbort
0708c218 00000018 b __threads
0708c230 0000000c b __mutex
0708c23c 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c240 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c244 00000004 B CTRPluginFramework::Controller::_keysDown
0708c248 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c24c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c250 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c252 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c254 0000001c b CTRPluginFramework::g_dummy
0708c270 00000180 b CTRPluginFramework::g_keyName
0708c3f0 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708c40c 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708c424 0000000c B CTRPluginFramework::FSPath::FSMutex
0708c430 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708c434 00000001 B CTRPluginFramework::EventManager::_isTouching
0708c438 00000004 B CTRPluginFramework::_pool
0708c43c 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c440 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c450 00000001 b CTRPluginFramework::g_progressLoop
0708c454 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c458 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c460 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c468 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c470 00000004 b CTRPluginFramework::__converter
0708c474 00000004 b CTRPluginFramework::g_context
0708c478 00000001 b CTRPluginFramework::ToggleFloat
0708c479 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708c47c 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708c480 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708c484 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708c488 00000008 B CTRPluginFramework::ARHandler::Storage
0708c490 00000010 B CTRPluginFramework::ARHandler::Data
0708c4a0 00000008 B CTRPluginFramework::ARHandler::Offset
0708c4a8 00000fa0 b CTRPluginFramework::arStack
0708d448 00000004 b arbiter
0708d44c 00000004 b sharedFontAddr
0708d450 00000004 B g_sharedFont
0708d454 00000004 b srvRefCount
0708d458 00000004 b srvHandle
0708d45c 00000004 b currentAddr
0708d460 00000004 b maxAddr
0708d464 00000004 b minAddr
0708d468 00000004 b cfguRefCount
0708d46c 00000004 b cfguHandle
0708d470 00000001 b gspRunEvents
0708d474 00000004 b gspEventThread
0708d478 00000004 b gspEvent
0708d47c 00000001 b gspGpuRight
0708d480 00000004 b gspSharedMem
0708d484 00000004 b gspSharedMemHandle
0708d488 00000004 b gspRefCount
0708d48c 00000004 b gspGpuHandle
0708d490 00000004 b acRefCount
0708d494 00000004 b acHandle
0708d498 00000004 b amRefCount
0708d49c 00000004 b amHandle
0708d4a0 00000004 b __sslc_refcount
0708d4a4 00000004 B __sslc_servhandle
0708d4a8 00000001 b flagValue.0
0708d4a9 00000001 b flagInit.1
0708d4ac 00000004 b serviceName.6
0708d4b0 0000000c b aptFirstHook
0708d4bc 00000004 b aptLockHandle
0708d4c0 00000001 b usingIrrst
0708d4c4 00000004 b hidRefCount
0708d4c8 00000006 b gRate
0708d4d0 00000006 b aVec
0708d4d8 00000004 b cPos
0708d4dc 00000004 b tPos
0708d4e0 00000004 b kRepeat
0708d4e4 00000004 b kUp
0708d4e8 00000004 b kDown
0708d4ec 00000004 b kHeld
0708d4f0 00000004 b kOld
0708d4f4 00000004 B hidSharedMem
0708d4f8 00000014 B hidEvents
0708d50c 00000004 B hidMemHandle
0708d510 00000004 B hidHandle
0708d514 00000004 b srvPmHandle
0708d518 00000080 b fsExemptArchives
0708d598 00000004 b fsuRefCount
0708d59c 00000004 b fsuHandle
0708d5a0 00000004 V __ctru_heap_size
0708d5a4 00000004 B __ctru_linear_heap
0708d5a8 00000004 B __ctru_heap
0708d5ac 00000004 b irrstRefCount
0708d5b0 00000004 b csPos
0708d5b4 00000004 b kHeld
0708d5b8 00000004 B irrstSharedMem
0708d5bc 00000004 B irrstEvent
0708d5c0 00000004 B irrstMemHandle
0708d5c4 00000004 B irrstHandle
0708d5c8 00000004 b (anonymous namespace)::__new_handler
0708d5cc 00000010 b (anonymous namespace)::emergency_pool
0708d5dc 0000000c b (anonymous namespace)::eh_globals
0708d5e8 00000010 V std::string::_Rep::_S_empty_rep_storage
0708d5f8 0000000c b __sinit_recursive_mutex
0708d604 0000000c b __sfp_recursive_mutex
0708d610 00000028 B __malloc_current_mallinfo
0708d638 00000004 B __malloc_max_total_mem
0708d63c 00000004 B __malloc_max_sbrked_mem
0708d640 00000004 B __malloc_top_pad
0708d644 0000000c b __malloc_recursive_mutex
0708d650 00000004 b __tz_mutex
0708d654 00000004 b prev_tzenv
0708d658 0000000b b __tzname_dst
0708d664 0000000b b __tzname_std
0708d670 00000004 B _timezone
0708d674 00000004 B _daylight
0708d678 0000000c B __atexit_recursive_mutex
0708d684 00000004 b initial_env
0708d688 0000000c b __env_recursive_mutex
0708d694 00000004 b heap_start.0
0708d698 00000004 B fake_heap_start
0708d69c 00000004 B fake_heap_end
0708d6a0 00000004 b __hndl_lock
0708d6a4 B __tls_start
0708d6d0 B __bss_end__
0708d6d0 A __end__
0708d6d0 B __tls_end
